{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCJDQ,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAkB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCTjBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,yDAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAV,SAACA,GAAY,IAAD,EAGXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IALwB,mBAG9BC,EAH8B,KAGvBC,EAHuB,KAuBrC,OAdAC,qBAAU,WACNxB,EAAQC,GACHtB,MAAK,SAAA8C,GACFF,EAAS,CACLf,KAAMiB,EACNJ,SAAS,SAMtB,CAACpB,IAGGqB,EDpBuBI,CAAczB,GAArCoB,EAH4B,EAG5BA,QAAcP,EAHc,EAGnBN,KAEhB,OACA,qCACI,oBAAIS,UAAU,mCAAd,SAAkDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SACCH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEiBNe,EA9BM,WAAM,IAAD,EAGaxC,mBAAS,CAAC,cAHvB,mBAGhByC,EAHgB,KAGJ1C,EAHI,KAWvB,OACC,qCACA,8CACA,cAAE,EAAF,CAAcA,cAAeA,IAC7B,uBAEF,6BAEM0C,EAAWlB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAEzBA,SAAUA,GADLA,YCjBf4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,SAG1BxD,M","file":"static/js/main.7f31bde8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e)=>{\r\n        setInputValue(e.target.value);\r\n        }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats=>[inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n         )\r\n    }\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","export  const getGif = async(category)=>{\r\n    const url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}=10&api_key=tfIqc4DpukIYBsZeLP5auxiAXKWRbbsF`;\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n            }\r\n         })\r\n\r\n    return gifs\r\n  \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src={url} alt={title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    //Usando desesctructuracion.\r\n    const {loading, data:images} =useFetchGifts(category);\r\n   \r\n    return (\r\n    <>\r\n        <h3 className=\"animate__animated animate__pulse\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n        <div className=\"card-grid\">\r\n        {images.map(img =>\r\n            <GifGridItem\r\n            key={img.id}\r\n            {...img}/>\r\n            )}\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGif} from '../helpers/getGifs'\r\n\r\n//custom hook\r\nexport const useFetchGifts = (category)=>{\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        getGif( category )\r\n            .then(imgs=>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n          \r\n            })\r\n        \r\n\r\n    }, [category])\r\n\r\n\r\n    return state; //{data:[], loading: true} estado actual \r\n\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n\r\n   const [categories, setCategories] = useState(['One Piece']);\r\n\r\n   // const handleAdd = ()=>{\r\n\r\n   // setCategories(['Test',...categories])\r\n\r\n   // }\r\n  \r\n   return(\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    < AddCategory setCategories={setCategories}/>\r\n    <hr/>\r\n   \r\n  <ol>\r\n       {\r\n        categories.map(category=>  <GifGrid \r\n          key={category}\r\n          category={category}\r\n          />)\r\n       }\r\n  </ol>\r\n    </>\r\n   )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}